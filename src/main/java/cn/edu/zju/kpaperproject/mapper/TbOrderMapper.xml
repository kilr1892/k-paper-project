<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="cn.edu.zju.kpaperproject.mapper.TbOrderMapper" >
  <resultMap id="BaseResultMap" type="cn.edu.zju.kpaperproject.pojo.TbOrder" >
    <id column="id" property="id" jdbcType="INTEGER" />
    <result column="experiments_number" property="experimentsNumber" jdbcType="INTEGER" />
    <result column="cycle_times" property="cycleTimes" jdbcType="INTEGER" />
    <result column="engine_factory_id" property="engineFactoryId" jdbcType="VARCHAR" />
    <result column="supplier_id" property="supplierId" jdbcType="VARCHAR" />
    <result column="engine_to_supplier_ap" property="engineToSupplierAp" jdbcType="DOUBLE" />
    <result column="supplier_engine_to_ap" property="supplierEngineToAp" jdbcType="DOUBLE" />
    <result column="engine_whether_perform_contract" property="engineWhetherPerformContract" jdbcType="BIT" />
    <result column="supplier_whether_perform_contract" property="supplierWhetherPerformContract" jdbcType="BIT" />
    <result column="supplier_actual_price_p" property="supplierActualPriceP" jdbcType="INTEGER" />
    <result column="supplier_actual_quality_qs" property="supplierActualQualityQs" jdbcType="INTEGER" />
    <result column="supplier_actual_number_m" property="supplierActualNumberM" jdbcType="INTEGER" />
    <result column="engine_factory_to_supplier_score" property="engineFactoryToSupplierScore" jdbcType="INTEGER" />
    <result column="supplier_to_engine_factory_score" property="supplierToEngineFactoryScore" jdbcType="INTEGER" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    id, experiments_number, cycle_times, engine_factory_id, supplier_id, engine_to_supplier_ap, 
    supplier_engine_to_ap, engine_whether_perform_contract, supplier_whether_perform_contract, 
    supplier_actual_price_p, supplier_actual_quality_qs, supplier_actual_number_m, engine_factory_to_supplier_score, 
    supplier_to_engine_factory_score
  </sql>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="cn.edu.zju.kpaperproject.pojo.TbOrderExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from tb_order
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from tb_order
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from tb_order
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="cn.edu.zju.kpaperproject.pojo.TbOrderExample" >
    delete from tb_order
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="cn.edu.zju.kpaperproject.pojo.TbOrder" >
    insert into tb_order (id, experiments_number, cycle_times, 
      engine_factory_id, supplier_id, engine_to_supplier_ap, 
      supplier_engine_to_ap, engine_whether_perform_contract, 
      supplier_whether_perform_contract, supplier_actual_price_p, 
      supplier_actual_quality_qs, supplier_actual_number_m, 
      engine_factory_to_supplier_score, supplier_to_engine_factory_score
      )
    values (#{id,jdbcType=INTEGER}, #{experimentsNumber,jdbcType=INTEGER}, #{cycleTimes,jdbcType=INTEGER}, 
      #{engineFactoryId,jdbcType=VARCHAR}, #{supplierId,jdbcType=VARCHAR}, #{engineToSupplierAp,jdbcType=DOUBLE}, 
      #{supplierEngineToAp,jdbcType=DOUBLE}, #{engineWhetherPerformContract,jdbcType=BIT}, 
      #{supplierWhetherPerformContract,jdbcType=BIT}, #{supplierActualPriceP,jdbcType=INTEGER}, 
      #{supplierActualQualityQs,jdbcType=INTEGER}, #{supplierActualNumberM,jdbcType=INTEGER}, 
      #{engineFactoryToSupplierScore,jdbcType=INTEGER}, #{supplierToEngineFactoryScore,jdbcType=INTEGER}
      )
  </insert>
  <insert id="insertSelective" parameterType="cn.edu.zju.kpaperproject.pojo.TbOrder" >
    insert into tb_order
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        id,
      </if>
      <if test="experimentsNumber != null" >
        experiments_number,
      </if>
      <if test="cycleTimes != null" >
        cycle_times,
      </if>
      <if test="engineFactoryId != null" >
        engine_factory_id,
      </if>
      <if test="supplierId != null" >
        supplier_id,
      </if>
      <if test="engineToSupplierAp != null" >
        engine_to_supplier_ap,
      </if>
      <if test="supplierEngineToAp != null" >
        supplier_engine_to_ap,
      </if>
      <if test="engineWhetherPerformContract != null" >
        engine_whether_perform_contract,
      </if>
      <if test="supplierWhetherPerformContract != null" >
        supplier_whether_perform_contract,
      </if>
      <if test="supplierActualPriceP != null" >
        supplier_actual_price_p,
      </if>
      <if test="supplierActualQualityQs != null" >
        supplier_actual_quality_qs,
      </if>
      <if test="supplierActualNumberM != null" >
        supplier_actual_number_m,
      </if>
      <if test="engineFactoryToSupplierScore != null" >
        engine_factory_to_supplier_score,
      </if>
      <if test="supplierToEngineFactoryScore != null" >
        supplier_to_engine_factory_score,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=INTEGER},
      </if>
      <if test="experimentsNumber != null" >
        #{experimentsNumber,jdbcType=INTEGER},
      </if>
      <if test="cycleTimes != null" >
        #{cycleTimes,jdbcType=INTEGER},
      </if>
      <if test="engineFactoryId != null" >
        #{engineFactoryId,jdbcType=VARCHAR},
      </if>
      <if test="supplierId != null" >
        #{supplierId,jdbcType=VARCHAR},
      </if>
      <if test="engineToSupplierAp != null" >
        #{engineToSupplierAp,jdbcType=DOUBLE},
      </if>
      <if test="supplierEngineToAp != null" >
        #{supplierEngineToAp,jdbcType=DOUBLE},
      </if>
      <if test="engineWhetherPerformContract != null" >
        #{engineWhetherPerformContract,jdbcType=BIT},
      </if>
      <if test="supplierWhetherPerformContract != null" >
        #{supplierWhetherPerformContract,jdbcType=BIT},
      </if>
      <if test="supplierActualPriceP != null" >
        #{supplierActualPriceP,jdbcType=INTEGER},
      </if>
      <if test="supplierActualQualityQs != null" >
        #{supplierActualQualityQs,jdbcType=INTEGER},
      </if>
      <if test="supplierActualNumberM != null" >
        #{supplierActualNumberM,jdbcType=INTEGER},
      </if>
      <if test="engineFactoryToSupplierScore != null" >
        #{engineFactoryToSupplierScore,jdbcType=INTEGER},
      </if>
      <if test="supplierToEngineFactoryScore != null" >
        #{supplierToEngineFactoryScore,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="cn.edu.zju.kpaperproject.pojo.TbOrderExample" resultType="java.lang.Integer" >
    select count(*) from tb_order
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    update tb_order
    <set >
      <if test="record.id != null" >
        id = #{record.id,jdbcType=INTEGER},
      </if>
      <if test="record.experimentsNumber != null" >
        experiments_number = #{record.experimentsNumber,jdbcType=INTEGER},
      </if>
      <if test="record.cycleTimes != null" >
        cycle_times = #{record.cycleTimes,jdbcType=INTEGER},
      </if>
      <if test="record.engineFactoryId != null" >
        engine_factory_id = #{record.engineFactoryId,jdbcType=VARCHAR},
      </if>
      <if test="record.supplierId != null" >
        supplier_id = #{record.supplierId,jdbcType=VARCHAR},
      </if>
      <if test="record.engineToSupplierAp != null" >
        engine_to_supplier_ap = #{record.engineToSupplierAp,jdbcType=DOUBLE},
      </if>
      <if test="record.supplierEngineToAp != null" >
        supplier_engine_to_ap = #{record.supplierEngineToAp,jdbcType=DOUBLE},
      </if>
      <if test="record.engineWhetherPerformContract != null" >
        engine_whether_perform_contract = #{record.engineWhetherPerformContract,jdbcType=BIT},
      </if>
      <if test="record.supplierWhetherPerformContract != null" >
        supplier_whether_perform_contract = #{record.supplierWhetherPerformContract,jdbcType=BIT},
      </if>
      <if test="record.supplierActualPriceP != null" >
        supplier_actual_price_p = #{record.supplierActualPriceP,jdbcType=INTEGER},
      </if>
      <if test="record.supplierActualQualityQs != null" >
        supplier_actual_quality_qs = #{record.supplierActualQualityQs,jdbcType=INTEGER},
      </if>
      <if test="record.supplierActualNumberM != null" >
        supplier_actual_number_m = #{record.supplierActualNumberM,jdbcType=INTEGER},
      </if>
      <if test="record.engineFactoryToSupplierScore != null" >
        engine_factory_to_supplier_score = #{record.engineFactoryToSupplierScore,jdbcType=INTEGER},
      </if>
      <if test="record.supplierToEngineFactoryScore != null" >
        supplier_to_engine_factory_score = #{record.supplierToEngineFactoryScore,jdbcType=INTEGER},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    update tb_order
    set id = #{record.id,jdbcType=INTEGER},
      experiments_number = #{record.experimentsNumber,jdbcType=INTEGER},
      cycle_times = #{record.cycleTimes,jdbcType=INTEGER},
      engine_factory_id = #{record.engineFactoryId,jdbcType=VARCHAR},
      supplier_id = #{record.supplierId,jdbcType=VARCHAR},
      engine_to_supplier_ap = #{record.engineToSupplierAp,jdbcType=DOUBLE},
      supplier_engine_to_ap = #{record.supplierEngineToAp,jdbcType=DOUBLE},
      engine_whether_perform_contract = #{record.engineWhetherPerformContract,jdbcType=BIT},
      supplier_whether_perform_contract = #{record.supplierWhetherPerformContract,jdbcType=BIT},
      supplier_actual_price_p = #{record.supplierActualPriceP,jdbcType=INTEGER},
      supplier_actual_quality_qs = #{record.supplierActualQualityQs,jdbcType=INTEGER},
      supplier_actual_number_m = #{record.supplierActualNumberM,jdbcType=INTEGER},
      engine_factory_to_supplier_score = #{record.engineFactoryToSupplierScore,jdbcType=INTEGER},
      supplier_to_engine_factory_score = #{record.supplierToEngineFactoryScore,jdbcType=INTEGER}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="cn.edu.zju.kpaperproject.pojo.TbOrder" >
    update tb_order
    <set >
      <if test="experimentsNumber != null" >
        experiments_number = #{experimentsNumber,jdbcType=INTEGER},
      </if>
      <if test="cycleTimes != null" >
        cycle_times = #{cycleTimes,jdbcType=INTEGER},
      </if>
      <if test="engineFactoryId != null" >
        engine_factory_id = #{engineFactoryId,jdbcType=VARCHAR},
      </if>
      <if test="supplierId != null" >
        supplier_id = #{supplierId,jdbcType=VARCHAR},
      </if>
      <if test="engineToSupplierAp != null" >
        engine_to_supplier_ap = #{engineToSupplierAp,jdbcType=DOUBLE},
      </if>
      <if test="supplierEngineToAp != null" >
        supplier_engine_to_ap = #{supplierEngineToAp,jdbcType=DOUBLE},
      </if>
      <if test="engineWhetherPerformContract != null" >
        engine_whether_perform_contract = #{engineWhetherPerformContract,jdbcType=BIT},
      </if>
      <if test="supplierWhetherPerformContract != null" >
        supplier_whether_perform_contract = #{supplierWhetherPerformContract,jdbcType=BIT},
      </if>
      <if test="supplierActualPriceP != null" >
        supplier_actual_price_p = #{supplierActualPriceP,jdbcType=INTEGER},
      </if>
      <if test="supplierActualQualityQs != null" >
        supplier_actual_quality_qs = #{supplierActualQualityQs,jdbcType=INTEGER},
      </if>
      <if test="supplierActualNumberM != null" >
        supplier_actual_number_m = #{supplierActualNumberM,jdbcType=INTEGER},
      </if>
      <if test="engineFactoryToSupplierScore != null" >
        engine_factory_to_supplier_score = #{engineFactoryToSupplierScore,jdbcType=INTEGER},
      </if>
      <if test="supplierToEngineFactoryScore != null" >
        supplier_to_engine_factory_score = #{supplierToEngineFactoryScore,jdbcType=INTEGER},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="cn.edu.zju.kpaperproject.pojo.TbOrder" >
    update tb_order
    set experiments_number = #{experimentsNumber,jdbcType=INTEGER},
      cycle_times = #{cycleTimes,jdbcType=INTEGER},
      engine_factory_id = #{engineFactoryId,jdbcType=VARCHAR},
      supplier_id = #{supplierId,jdbcType=VARCHAR},
      engine_to_supplier_ap = #{engineToSupplierAp,jdbcType=DOUBLE},
      supplier_engine_to_ap = #{supplierEngineToAp,jdbcType=DOUBLE},
      engine_whether_perform_contract = #{engineWhetherPerformContract,jdbcType=BIT},
      supplier_whether_perform_contract = #{supplierWhetherPerformContract,jdbcType=BIT},
      supplier_actual_price_p = #{supplierActualPriceP,jdbcType=INTEGER},
      supplier_actual_quality_qs = #{supplierActualQualityQs,jdbcType=INTEGER},
      supplier_actual_number_m = #{supplierActualNumberM,jdbcType=INTEGER},
      engine_factory_to_supplier_score = #{engineFactoryToSupplierScore,jdbcType=INTEGER},
      supplier_to_engine_factory_score = #{supplierToEngineFactoryScore,jdbcType=INTEGER}
    where id = #{id,jdbcType=INTEGER}
  </update>
</mapper>