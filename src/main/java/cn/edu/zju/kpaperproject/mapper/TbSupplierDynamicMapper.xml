<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="cn.edu.zju.kpaperproject.mapper.TbSupplierDynamicMapper" >
  <resultMap id="BaseResultMap" type="cn.edu.zju.kpaperproject.pojo.TbSupplierDynamic" >
    <id column="id" property="id" jdbcType="INTEGER" />
    <result column="cycle_times" property="cycleTimes" jdbcType="INTEGER" />
    <result column="supplier_id" property="supplierId" jdbcType="VARCHAR" />
    <result column="supplier_total_assets_p" property="supplierTotalAssetsP" jdbcType="INTEGER" />
    <result column="supplier_credit_a" property="supplierCreditA" jdbcType="DOUBLE" />
    <result column="supplier_capacity_m" property="supplierCapacityM" jdbcType="INTEGER" />
    <result column="supplier_price_p_l" property="supplierPricePL" jdbcType="INTEGER" />
    <result column="supplier_price_p_u" property="supplierPricePU" jdbcType="INTEGER" />
    <result column="supplier_quality_qs" property="supplierQualityQs" jdbcType="INTEGER" />
    <result column="supplier_capacity_utilization" property="supplierCapacityUtilization" jdbcType="DOUBLE" />
    <result column="supplier_type" property="supplierType" jdbcType="INTEGER" />
    <result column="avg_price" property="avgPrice" jdbcType="INTEGER" />
    <result column="avg_quality" property="avgQuality" jdbcType="INTEGER" />
    <result column="supplier_actual_sale_number" property="supplierActualSaleNumber" jdbcType="INTEGER" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    id, cycle_times, supplier_id, supplier_total_assets_p, supplier_credit_a, supplier_capacity_m, 
    supplier_price_p_l, supplier_price_p_u, supplier_quality_qs, supplier_capacity_utilization, 
    supplier_type, avg_price, avg_quality, supplier_actual_sale_number
  </sql>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="cn.edu.zju.kpaperproject.pojo.TbSupplierDynamicExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from tb_supplier_dynamic
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from tb_supplier_dynamic
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from tb_supplier_dynamic
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="cn.edu.zju.kpaperproject.pojo.TbSupplierDynamicExample" >
    delete from tb_supplier_dynamic
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="cn.edu.zju.kpaperproject.pojo.TbSupplierDynamic" >
    insert into tb_supplier_dynamic (id, cycle_times, supplier_id, 
      supplier_total_assets_p, supplier_credit_a, supplier_capacity_m, 
      supplier_price_p_l, supplier_price_p_u, supplier_quality_qs, 
      supplier_capacity_utilization, supplier_type, 
      avg_price, avg_quality, supplier_actual_sale_number
      )
    values (#{id,jdbcType=INTEGER}, #{cycleTimes,jdbcType=INTEGER}, #{supplierId,jdbcType=VARCHAR}, 
      #{supplierTotalAssetsP,jdbcType=INTEGER}, #{supplierCreditA,jdbcType=DOUBLE}, #{supplierCapacityM,jdbcType=INTEGER}, 
      #{supplierPricePL,jdbcType=INTEGER}, #{supplierPricePU,jdbcType=INTEGER}, #{supplierQualityQs,jdbcType=INTEGER}, 
      #{supplierCapacityUtilization,jdbcType=DOUBLE}, #{supplierType,jdbcType=INTEGER}, 
      #{avgPrice,jdbcType=INTEGER}, #{avgQuality,jdbcType=INTEGER}, #{supplierActualSaleNumber,jdbcType=INTEGER}
      )
  </insert>
  <insert id="insertSelective" parameterType="cn.edu.zju.kpaperproject.pojo.TbSupplierDynamic" >
    insert into tb_supplier_dynamic
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        id,
      </if>
      <if test="cycleTimes != null" >
        cycle_times,
      </if>
      <if test="supplierId != null" >
        supplier_id,
      </if>
      <if test="supplierTotalAssetsP != null" >
        supplier_total_assets_p,
      </if>
      <if test="supplierCreditA != null" >
        supplier_credit_a,
      </if>
      <if test="supplierCapacityM != null" >
        supplier_capacity_m,
      </if>
      <if test="supplierPricePL != null" >
        supplier_price_p_l,
      </if>
      <if test="supplierPricePU != null" >
        supplier_price_p_u,
      </if>
      <if test="supplierQualityQs != null" >
        supplier_quality_qs,
      </if>
      <if test="supplierCapacityUtilization != null" >
        supplier_capacity_utilization,
      </if>
      <if test="supplierType != null" >
        supplier_type,
      </if>
      <if test="avgPrice != null" >
        avg_price,
      </if>
      <if test="avgQuality != null" >
        avg_quality,
      </if>
      <if test="supplierActualSaleNumber != null" >
        supplier_actual_sale_number,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=INTEGER},
      </if>
      <if test="cycleTimes != null" >
        #{cycleTimes,jdbcType=INTEGER},
      </if>
      <if test="supplierId != null" >
        #{supplierId,jdbcType=VARCHAR},
      </if>
      <if test="supplierTotalAssetsP != null" >
        #{supplierTotalAssetsP,jdbcType=INTEGER},
      </if>
      <if test="supplierCreditA != null" >
        #{supplierCreditA,jdbcType=DOUBLE},
      </if>
      <if test="supplierCapacityM != null" >
        #{supplierCapacityM,jdbcType=INTEGER},
      </if>
      <if test="supplierPricePL != null" >
        #{supplierPricePL,jdbcType=INTEGER},
      </if>
      <if test="supplierPricePU != null" >
        #{supplierPricePU,jdbcType=INTEGER},
      </if>
      <if test="supplierQualityQs != null" >
        #{supplierQualityQs,jdbcType=INTEGER},
      </if>
      <if test="supplierCapacityUtilization != null" >
        #{supplierCapacityUtilization,jdbcType=DOUBLE},
      </if>
      <if test="supplierType != null" >
        #{supplierType,jdbcType=INTEGER},
      </if>
      <if test="avgPrice != null" >
        #{avgPrice,jdbcType=INTEGER},
      </if>
      <if test="avgQuality != null" >
        #{avgQuality,jdbcType=INTEGER},
      </if>
      <if test="supplierActualSaleNumber != null" >
        #{supplierActualSaleNumber,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>

  <select id="countByExample" parameterType="cn.edu.zju.kpaperproject.pojo.TbSupplierDynamicExample" resultType="java.lang.Integer" >
    select count(*) from tb_supplier_dynamic
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    update tb_supplier_dynamic
    <set >
      <if test="record.id != null" >
        id = #{record.id,jdbcType=INTEGER},
      </if>
      <if test="record.cycleTimes != null" >
        cycle_times = #{record.cycleTimes,jdbcType=INTEGER},
      </if>
      <if test="record.supplierId != null" >
        supplier_id = #{record.supplierId,jdbcType=VARCHAR},
      </if>
      <if test="record.supplierTotalAssetsP != null" >
        supplier_total_assets_p = #{record.supplierTotalAssetsP,jdbcType=INTEGER},
      </if>
      <if test="record.supplierCreditA != null" >
        supplier_credit_a = #{record.supplierCreditA,jdbcType=DOUBLE},
      </if>
      <if test="record.supplierCapacityM != null" >
        supplier_capacity_m = #{record.supplierCapacityM,jdbcType=INTEGER},
      </if>
      <if test="record.supplierPricePL != null" >
        supplier_price_p_l = #{record.supplierPricePL,jdbcType=INTEGER},
      </if>
      <if test="record.supplierPricePU != null" >
        supplier_price_p_u = #{record.supplierPricePU,jdbcType=INTEGER},
      </if>
      <if test="record.supplierQualityQs != null" >
        supplier_quality_qs = #{record.supplierQualityQs,jdbcType=INTEGER},
      </if>
      <if test="record.supplierCapacityUtilization != null" >
        supplier_capacity_utilization = #{record.supplierCapacityUtilization,jdbcType=DOUBLE},
      </if>
      <if test="record.supplierType != null" >
        supplier_type = #{record.supplierType,jdbcType=INTEGER},
      </if>
      <if test="record.avgPrice != null" >
        avg_price = #{record.avgPrice,jdbcType=INTEGER},
      </if>
      <if test="record.avgQuality != null" >
        avg_quality = #{record.avgQuality,jdbcType=INTEGER},
      </if>
      <if test="record.supplierActualSaleNumber != null" >
        supplier_actual_sale_number = #{record.supplierActualSaleNumber,jdbcType=INTEGER},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    update tb_supplier_dynamic
    set id = #{record.id,jdbcType=INTEGER},
      cycle_times = #{record.cycleTimes,jdbcType=INTEGER},
      supplier_id = #{record.supplierId,jdbcType=VARCHAR},
      supplier_total_assets_p = #{record.supplierTotalAssetsP,jdbcType=INTEGER},
      supplier_credit_a = #{record.supplierCreditA,jdbcType=DOUBLE},
      supplier_capacity_m = #{record.supplierCapacityM,jdbcType=INTEGER},
      supplier_price_p_l = #{record.supplierPricePL,jdbcType=INTEGER},
      supplier_price_p_u = #{record.supplierPricePU,jdbcType=INTEGER},
      supplier_quality_qs = #{record.supplierQualityQs,jdbcType=INTEGER},
      supplier_capacity_utilization = #{record.supplierCapacityUtilization,jdbcType=DOUBLE},
      supplier_type = #{record.supplierType,jdbcType=INTEGER},
      avg_price = #{record.avgPrice,jdbcType=INTEGER},
      avg_quality = #{record.avgQuality,jdbcType=INTEGER},
      supplier_actual_sale_number = #{record.supplierActualSaleNumber,jdbcType=INTEGER}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="cn.edu.zju.kpaperproject.pojo.TbSupplierDynamic" >
    update tb_supplier_dynamic
    <set >
      <if test="cycleTimes != null" >
        cycle_times = #{cycleTimes,jdbcType=INTEGER},
      </if>
      <if test="supplierId != null" >
        supplier_id = #{supplierId,jdbcType=VARCHAR},
      </if>
      <if test="supplierTotalAssetsP != null" >
        supplier_total_assets_p = #{supplierTotalAssetsP,jdbcType=INTEGER},
      </if>
      <if test="supplierCreditA != null" >
        supplier_credit_a = #{supplierCreditA,jdbcType=DOUBLE},
      </if>
      <if test="supplierCapacityM != null" >
        supplier_capacity_m = #{supplierCapacityM,jdbcType=INTEGER},
      </if>
      <if test="supplierPricePL != null" >
        supplier_price_p_l = #{supplierPricePL,jdbcType=INTEGER},
      </if>
      <if test="supplierPricePU != null" >
        supplier_price_p_u = #{supplierPricePU,jdbcType=INTEGER},
      </if>
      <if test="supplierQualityQs != null" >
        supplier_quality_qs = #{supplierQualityQs,jdbcType=INTEGER},
      </if>
      <if test="supplierCapacityUtilization != null" >
        supplier_capacity_utilization = #{supplierCapacityUtilization,jdbcType=DOUBLE},
      </if>
      <if test="supplierType != null" >
        supplier_type = #{supplierType,jdbcType=INTEGER},
      </if>
      <if test="avgPrice != null" >
        avg_price = #{avgPrice,jdbcType=INTEGER},
      </if>
      <if test="avgQuality != null" >
        avg_quality = #{avgQuality,jdbcType=INTEGER},
      </if>
      <if test="supplierActualSaleNumber != null" >
        supplier_actual_sale_number = #{supplierActualSaleNumber,jdbcType=INTEGER},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="cn.edu.zju.kpaperproject.pojo.TbSupplierDynamic" >
    update tb_supplier_dynamic
    set cycle_times = #{cycleTimes,jdbcType=INTEGER},
      supplier_id = #{supplierId,jdbcType=VARCHAR},
      supplier_total_assets_p = #{supplierTotalAssetsP,jdbcType=INTEGER},
      supplier_credit_a = #{supplierCreditA,jdbcType=DOUBLE},
      supplier_capacity_m = #{supplierCapacityM,jdbcType=INTEGER},
      supplier_price_p_l = #{supplierPricePL,jdbcType=INTEGER},
      supplier_price_p_u = #{supplierPricePU,jdbcType=INTEGER},
      supplier_quality_qs = #{supplierQualityQs,jdbcType=INTEGER},
      supplier_capacity_utilization = #{supplierCapacityUtilization,jdbcType=DOUBLE},
      supplier_type = #{supplierType,jdbcType=INTEGER},
      avg_price = #{avgPrice,jdbcType=INTEGER},
      avg_quality = #{avgQuality,jdbcType=INTEGER},
      supplier_actual_sale_number = #{supplierActualSaleNumber,jdbcType=INTEGER}
    where id = #{id,jdbcType=INTEGER}
  </update>


  <insert id="insertList" parameterType="java.util.List">
    INSERT INTO `tb_supplier_dynamic`
    (
    id, `cycle_times`, `supplier_id`, `supplier_total_assets_p`, `supplier_credit_a`, `supplier_capacity_m`, `supplier_price_p_l`, `supplier_price_p_u`, `supplier_quality_qs`, `supplier_capacity_utilization`, `supplier_type`, `avg_price`, `avg_quality`, `supplier_actual_sale_number`
    )
    VALUES
    <foreach collection="list" item="item" index="index" separator=",">
      (NULL, #{item.cycleTimes,jdbcType=INTEGER}, #{item.supplierId,jdbcType=VARCHAR},
      #{item.supplierTotalAssetsP,jdbcType=INTEGER}, #{item.supplierCreditA,jdbcType=DOUBLE}, #{item.supplierCapacityM,jdbcType=INTEGER},
      #{item.supplierPricePL,jdbcType=INTEGER}, #{item.supplierPricePU,jdbcType=INTEGER}, #{item.supplierQualityQs,jdbcType=INTEGER},
      #{item.supplierCapacityUtilization,jdbcType=DOUBLE}, #{item.supplierType,jdbcType=INTEGER},
      #{item.avgPrice,jdbcType=INTEGER}, #{item.avgQuality,jdbcType=INTEGER}, #{item.supplierActualSaleNumber,jdbcType=INTEGER}
      )
    </foreach>
  </insert>
</mapper>