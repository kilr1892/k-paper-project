<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="cn.edu.zju.kpaperproject.mapper.TbEngineFactoryDynamicMapper" >
  <resultMap id="BaseResultMap" type="cn.edu.zju.kpaperproject.pojo.TbEngineFactoryDynamic" >
    <id column="id" property="id" jdbcType="INTEGER" />
    <result column="cycle_times" property="cycleTimes" jdbcType="INTEGER" />
    <result column="engine_factory_id" property="engineFactoryId" jdbcType="VARCHAR" />
    <result column="engine_factory_total_assets_p" property="engineFactoryTotalAssetsP" jdbcType="INTEGER" />
    <result column="engine_factory_credit_h" property="engineFactoryCreditH" jdbcType="DOUBLE" />
    <result column="engine_factory_capacity_m" property="engineFactoryCapacityM" jdbcType="INTEGER" />
    <result column="engine_factory_price_p_l" property="engineFactoryPricePL" jdbcType="INTEGER" />
    <result column="engine_factory_price_p_u" property="engineFactoryPricePU" jdbcType="INTEGER" />
    <result column="engine_factory_quality_q" property="engineFactoryQualityQ" jdbcType="INTEGER" />
    <result column="engine_factory_demand_forecast_d" property="engineFactoryDemandForecastD" jdbcType="INTEGER" />
    <result column="engine_factory_actual_number_m" property="engineFactoryActualNumberM" jdbcType="INTEGER" />
    <result column="engine_factory_actual_price_ap" property="engineFactoryActualPriceAp" jdbcType="INTEGER" />
    <result column="engine_factory_actual_quality_aq" property="engineFactoryActualQualityAq" jdbcType="INTEGER" />
    <result column="engine_factory_capacity_utilization" property="engineFactoryCapacityUtilization" jdbcType="DOUBLE" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    id, cycle_times, engine_factory_id, engine_factory_total_assets_p, engine_factory_credit_h, 
    engine_factory_capacity_m, engine_factory_price_p_l, engine_factory_price_p_u, engine_factory_quality_q, 
    engine_factory_demand_forecast_d, engine_factory_actual_number_m, engine_factory_actual_price_ap, 
    engine_factory_actual_quality_aq, engine_factory_capacity_utilization
  </sql>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="cn.edu.zju.kpaperproject.pojo.TbEngineFactoryDynamicExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from tb_engine_factory_dynamic
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from tb_engine_factory_dynamic
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from tb_engine_factory_dynamic
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="cn.edu.zju.kpaperproject.pojo.TbEngineFactoryDynamicExample" >
    delete from tb_engine_factory_dynamic
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="cn.edu.zju.kpaperproject.pojo.TbEngineFactoryDynamic" >
    insert into tb_engine_factory_dynamic (id, cycle_times, engine_factory_id, 
      engine_factory_total_assets_p, engine_factory_credit_h, 
      engine_factory_capacity_m, engine_factory_price_p_l, 
      engine_factory_price_p_u, engine_factory_quality_q, 
      engine_factory_demand_forecast_d, engine_factory_actual_number_m, 
      engine_factory_actual_price_ap, engine_factory_actual_quality_aq, 
      engine_factory_capacity_utilization)
    values (#{id,jdbcType=INTEGER}, #{cycleTimes,jdbcType=INTEGER}, #{engineFactoryId,jdbcType=VARCHAR}, 
      #{engineFactoryTotalAssetsP,jdbcType=INTEGER}, #{engineFactoryCreditH,jdbcType=DOUBLE}, 
      #{engineFactoryCapacityM,jdbcType=INTEGER}, #{engineFactoryPricePL,jdbcType=INTEGER}, 
      #{engineFactoryPricePU,jdbcType=INTEGER}, #{engineFactoryQualityQ,jdbcType=INTEGER}, 
      #{engineFactoryDemandForecastD,jdbcType=INTEGER}, #{engineFactoryActualNumberM,jdbcType=INTEGER}, 
      #{engineFactoryActualPriceAp,jdbcType=INTEGER}, #{engineFactoryActualQualityAq,jdbcType=INTEGER}, 
      #{engineFactoryCapacityUtilization,jdbcType=DOUBLE})
  </insert>
  <insert id="insertSelective" parameterType="cn.edu.zju.kpaperproject.pojo.TbEngineFactoryDynamic" >
    insert into tb_engine_factory_dynamic
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        id,
      </if>
      <if test="cycleTimes != null" >
        cycle_times,
      </if>
      <if test="engineFactoryId != null" >
        engine_factory_id,
      </if>
      <if test="engineFactoryTotalAssetsP != null" >
        engine_factory_total_assets_p,
      </if>
      <if test="engineFactoryCreditH != null" >
        engine_factory_credit_h,
      </if>
      <if test="engineFactoryCapacityM != null" >
        engine_factory_capacity_m,
      </if>
      <if test="engineFactoryPricePL != null" >
        engine_factory_price_p_l,
      </if>
      <if test="engineFactoryPricePU != null" >
        engine_factory_price_p_u,
      </if>
      <if test="engineFactoryQualityQ != null" >
        engine_factory_quality_q,
      </if>
      <if test="engineFactoryDemandForecastD != null" >
        engine_factory_demand_forecast_d,
      </if>
      <if test="engineFactoryActualNumberM != null" >
        engine_factory_actual_number_m,
      </if>
      <if test="engineFactoryActualPriceAp != null" >
        engine_factory_actual_price_ap,
      </if>
      <if test="engineFactoryActualQualityAq != null" >
        engine_factory_actual_quality_aq,
      </if>
      <if test="engineFactoryCapacityUtilization != null" >
        engine_factory_capacity_utilization,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=INTEGER},
      </if>
      <if test="cycleTimes != null" >
        #{cycleTimes,jdbcType=INTEGER},
      </if>
      <if test="engineFactoryId != null" >
        #{engineFactoryId,jdbcType=VARCHAR},
      </if>
      <if test="engineFactoryTotalAssetsP != null" >
        #{engineFactoryTotalAssetsP,jdbcType=INTEGER},
      </if>
      <if test="engineFactoryCreditH != null" >
        #{engineFactoryCreditH,jdbcType=DOUBLE},
      </if>
      <if test="engineFactoryCapacityM != null" >
        #{engineFactoryCapacityM,jdbcType=INTEGER},
      </if>
      <if test="engineFactoryPricePL != null" >
        #{engineFactoryPricePL,jdbcType=INTEGER},
      </if>
      <if test="engineFactoryPricePU != null" >
        #{engineFactoryPricePU,jdbcType=INTEGER},
      </if>
      <if test="engineFactoryQualityQ != null" >
        #{engineFactoryQualityQ,jdbcType=INTEGER},
      </if>
      <if test="engineFactoryDemandForecastD != null" >
        #{engineFactoryDemandForecastD,jdbcType=INTEGER},
      </if>
      <if test="engineFactoryActualNumberM != null" >
        #{engineFactoryActualNumberM,jdbcType=INTEGER},
      </if>
      <if test="engineFactoryActualPriceAp != null" >
        #{engineFactoryActualPriceAp,jdbcType=INTEGER},
      </if>
      <if test="engineFactoryActualQualityAq != null" >
        #{engineFactoryActualQualityAq,jdbcType=INTEGER},
      </if>
      <if test="engineFactoryCapacityUtilization != null" >
        #{engineFactoryCapacityUtilization,jdbcType=DOUBLE},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="cn.edu.zju.kpaperproject.pojo.TbEngineFactoryDynamicExample" resultType="java.lang.Integer" >
    select count(*) from tb_engine_factory_dynamic
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    update tb_engine_factory_dynamic
    <set >
      <if test="record.id != null" >
        id = #{record.id,jdbcType=INTEGER},
      </if>
      <if test="record.cycleTimes != null" >
        cycle_times = #{record.cycleTimes,jdbcType=INTEGER},
      </if>
      <if test="record.engineFactoryId != null" >
        engine_factory_id = #{record.engineFactoryId,jdbcType=VARCHAR},
      </if>
      <if test="record.engineFactoryTotalAssetsP != null" >
        engine_factory_total_assets_p = #{record.engineFactoryTotalAssetsP,jdbcType=INTEGER},
      </if>
      <if test="record.engineFactoryCreditH != null" >
        engine_factory_credit_h = #{record.engineFactoryCreditH,jdbcType=DOUBLE},
      </if>
      <if test="record.engineFactoryCapacityM != null" >
        engine_factory_capacity_m = #{record.engineFactoryCapacityM,jdbcType=INTEGER},
      </if>
      <if test="record.engineFactoryPricePL != null" >
        engine_factory_price_p_l = #{record.engineFactoryPricePL,jdbcType=INTEGER},
      </if>
      <if test="record.engineFactoryPricePU != null" >
        engine_factory_price_p_u = #{record.engineFactoryPricePU,jdbcType=INTEGER},
      </if>
      <if test="record.engineFactoryQualityQ != null" >
        engine_factory_quality_q = #{record.engineFactoryQualityQ,jdbcType=INTEGER},
      </if>
      <if test="record.engineFactoryDemandForecastD != null" >
        engine_factory_demand_forecast_d = #{record.engineFactoryDemandForecastD,jdbcType=INTEGER},
      </if>
      <if test="record.engineFactoryActualNumberM != null" >
        engine_factory_actual_number_m = #{record.engineFactoryActualNumberM,jdbcType=INTEGER},
      </if>
      <if test="record.engineFactoryActualPriceAp != null" >
        engine_factory_actual_price_ap = #{record.engineFactoryActualPriceAp,jdbcType=INTEGER},
      </if>
      <if test="record.engineFactoryActualQualityAq != null" >
        engine_factory_actual_quality_aq = #{record.engineFactoryActualQualityAq,jdbcType=INTEGER},
      </if>
      <if test="record.engineFactoryCapacityUtilization != null" >
        engine_factory_capacity_utilization = #{record.engineFactoryCapacityUtilization,jdbcType=DOUBLE},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    update tb_engine_factory_dynamic
    set id = #{record.id,jdbcType=INTEGER},
      cycle_times = #{record.cycleTimes,jdbcType=INTEGER},
      engine_factory_id = #{record.engineFactoryId,jdbcType=VARCHAR},
      engine_factory_total_assets_p = #{record.engineFactoryTotalAssetsP,jdbcType=INTEGER},
      engine_factory_credit_h = #{record.engineFactoryCreditH,jdbcType=DOUBLE},
      engine_factory_capacity_m = #{record.engineFactoryCapacityM,jdbcType=INTEGER},
      engine_factory_price_p_l = #{record.engineFactoryPricePL,jdbcType=INTEGER},
      engine_factory_price_p_u = #{record.engineFactoryPricePU,jdbcType=INTEGER},
      engine_factory_quality_q = #{record.engineFactoryQualityQ,jdbcType=INTEGER},
      engine_factory_demand_forecast_d = #{record.engineFactoryDemandForecastD,jdbcType=INTEGER},
      engine_factory_actual_number_m = #{record.engineFactoryActualNumberM,jdbcType=INTEGER},
      engine_factory_actual_price_ap = #{record.engineFactoryActualPriceAp,jdbcType=INTEGER},
      engine_factory_actual_quality_aq = #{record.engineFactoryActualQualityAq,jdbcType=INTEGER},
      engine_factory_capacity_utilization = #{record.engineFactoryCapacityUtilization,jdbcType=DOUBLE}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="cn.edu.zju.kpaperproject.pojo.TbEngineFactoryDynamic" >
    update tb_engine_factory_dynamic
    <set >
      <if test="cycleTimes != null" >
        cycle_times = #{cycleTimes,jdbcType=INTEGER},
      </if>
      <if test="engineFactoryId != null" >
        engine_factory_id = #{engineFactoryId,jdbcType=VARCHAR},
      </if>
      <if test="engineFactoryTotalAssetsP != null" >
        engine_factory_total_assets_p = #{engineFactoryTotalAssetsP,jdbcType=INTEGER},
      </if>
      <if test="engineFactoryCreditH != null" >
        engine_factory_credit_h = #{engineFactoryCreditH,jdbcType=DOUBLE},
      </if>
      <if test="engineFactoryCapacityM != null" >
        engine_factory_capacity_m = #{engineFactoryCapacityM,jdbcType=INTEGER},
      </if>
      <if test="engineFactoryPricePL != null" >
        engine_factory_price_p_l = #{engineFactoryPricePL,jdbcType=INTEGER},
      </if>
      <if test="engineFactoryPricePU != null" >
        engine_factory_price_p_u = #{engineFactoryPricePU,jdbcType=INTEGER},
      </if>
      <if test="engineFactoryQualityQ != null" >
        engine_factory_quality_q = #{engineFactoryQualityQ,jdbcType=INTEGER},
      </if>
      <if test="engineFactoryDemandForecastD != null" >
        engine_factory_demand_forecast_d = #{engineFactoryDemandForecastD,jdbcType=INTEGER},
      </if>
      <if test="engineFactoryActualNumberM != null" >
        engine_factory_actual_number_m = #{engineFactoryActualNumberM,jdbcType=INTEGER},
      </if>
      <if test="engineFactoryActualPriceAp != null" >
        engine_factory_actual_price_ap = #{engineFactoryActualPriceAp,jdbcType=INTEGER},
      </if>
      <if test="engineFactoryActualQualityAq != null" >
        engine_factory_actual_quality_aq = #{engineFactoryActualQualityAq,jdbcType=INTEGER},
      </if>
      <if test="engineFactoryCapacityUtilization != null" >
        engine_factory_capacity_utilization = #{engineFactoryCapacityUtilization,jdbcType=DOUBLE},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="cn.edu.zju.kpaperproject.pojo.TbEngineFactoryDynamic" >
    update tb_engine_factory_dynamic
    set cycle_times = #{cycleTimes,jdbcType=INTEGER},
      engine_factory_id = #{engineFactoryId,jdbcType=VARCHAR},
      engine_factory_total_assets_p = #{engineFactoryTotalAssetsP,jdbcType=INTEGER},
      engine_factory_credit_h = #{engineFactoryCreditH,jdbcType=DOUBLE},
      engine_factory_capacity_m = #{engineFactoryCapacityM,jdbcType=INTEGER},
      engine_factory_price_p_l = #{engineFactoryPricePL,jdbcType=INTEGER},
      engine_factory_price_p_u = #{engineFactoryPricePU,jdbcType=INTEGER},
      engine_factory_quality_q = #{engineFactoryQualityQ,jdbcType=INTEGER},
      engine_factory_demand_forecast_d = #{engineFactoryDemandForecastD,jdbcType=INTEGER},
      engine_factory_actual_number_m = #{engineFactoryActualNumberM,jdbcType=INTEGER},
      engine_factory_actual_price_ap = #{engineFactoryActualPriceAp,jdbcType=INTEGER},
      engine_factory_actual_quality_aq = #{engineFactoryActualQualityAq,jdbcType=INTEGER},
      engine_factory_capacity_utilization = #{engineFactoryCapacityUtilization,jdbcType=DOUBLE}
    where id = #{id,jdbcType=INTEGER}
  </update>
</mapper>